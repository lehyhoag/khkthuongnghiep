<!doctype html>
<html lang="en" class="h-100">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <title>Q&A</title>
    <link rel="canonical" href="https://getbootstrap.com/docs/5.2/examples/cover/">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor" crossorigin="anonymous">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Lilita+One&display=swap">
    <link href="https://fonts.googleapis.com/css2?family=Comfortaa:wght@300&display=swap" rel="stylesheet">


    <style>
      body {
          background: url("bg.jpg") no-repeat;
          background-size: cover;
          margin: 0;
          padding: 0;
          display: flex;
          flex-direction: column;
          align-items: center;
          justify-content: center;
          height: 100vh;
      }
      .bd-placeholder-img {
          font-size: 1.125rem;
          text-anchor: middle;
          -webkit-user-select: none;
          -moz-user-select: none;
          user-select: none;
      }

      @media (min-width: 768px) {
          .bd-placeholder-img-lg {
            font-size: 3.5rem;
          }
      }

      #questionContainer, #answerContainer {
          max-width: 820px;
          width: 100%;
          background-color: #fff;
          padding: 20px;
          border-radius: 10px;
          box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
          margin: 20px auto;
          position: absolute;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
      }
      

      #answerContainer {
          display: none;
      }

      #startButton {
          font-family: 'Lilita One', cursive;
          background-color: #ffdab9; /* Peach Fuzz color */
          color: #333; /* Text color */
          border: none;
          padding: 10px 30px;
          font-size: 30px;
          cursor: pointer;
          border-radius: 20px;
          margin-bottom: 180px;
          transition: transform 0.3s ease-in-out;
      }
      #startButton:hover {
          transform: scale(1.1);
      }


      
      .nav-scroller {
        position: relative;
        z-index: 2;
        height: 2.75rem;
        overflow-y: hidden;
      }

      .nav-scroller .nav {
        display: flex;
        flex-wrap: nowrap;
        padding-bottom: 1rem;
        margin-top: -1px;
        overflow-x: auto;
        text-align: center;
        white-space: nowrap;
        -webkit-overflow-scrolling: touch;
      }
      .navbar {
          background-color: #fff;
          padding: 7px; /* Add padding for better spacing */
          margin-bottom: 0; /* Make the background transparent */
      }

      .navbar-collapse {
          justify-content: flex-end; /* Align the navbar to the right */
      }

      .navbar a{
        position: relative;
        font-size: 16px;
        color: #000000;
        margin-right: 30px;
        text-decoration: none;
      }
      .navbar a::after{
        content: "";
        position: absolute;
        left: 0;
        width: 100%;
        height: 2px;
        background: #000000;
        bottom: -5px;
        border-radius: 5px;
        transform: translateY(10px);
        opacity: 0;
        transition: .5s ease;
      }
      .navbar a:hover:after{
        transform: translateY(0);
        opacity: 1;
      }
      .container {
          text-align: center;
      }
    

      #questionContainer {
          display: none;
          max-width: 80%;
          margin: auto;
          background-color: rgba(255, 255, 255, 0.5); /* Adjust the alpha (fourth) parameter for transparency */
          padding: 20px;
          border-radius: 10px;
          box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      }

      #questionBox {
          text-align: left;
          padding: 10px;
          font-family: 'Comfortaa', cursive;
          font-weight: bold;
      }


      #answer {
          width: 100%;
          padding: 5px;
          margin-bottom: 20px;
          background-color: transparent; /* Make the background transparent */
          border: none; /* Remove the border */
          border-bottom: 2px solid #007bff; /* Add a 2px blue underline */
          outline: none; /* Remove the default focus outline */
      }


      #buttonsContainer {
          display: flex;
          justify-content: space-between;
          align-items: center;
          width: 100%;
      }
      

      #prevButton, #nextButton, #submitButton {
          padding: 10px 20px;
          font-size: 16px;
          cursor: pointer;
          border-radius: 5px;
      }

      #prevButton {
          background-color: #474747;
          color: #fff;
          border: none;
          margin-right: 10px;
      }

      #nextButton {
          background-color: #474747;
          color: #fff;
          border: none;
          margin-left: auto; /* This ensures that Next button stays on the right */
      }

      #submitButton {
          background-color: #007bff;
          color: #fff;
          border: none;
      }
      #submitButton.loading {
        pointer-events: none;
        opacity: 0.7;
      }

      #submitButton .spinner-border {
        display: none;
        margin-right: 5px;
      }

      #submitButton.loading .spinner-border {
        display: inline-block;
      }
      #answer.invalid-answer {
          border: none; /* Remove the regular border */
          border-bottom: 2px solid #ff0000; /* Add a red underline instead */
          background-color: rgba(255, 0, 0, 0.1); /* Optional: Add a background color to highlight the invalid answer */
      }
      #answerContainer {
          position: fixed;
          max-width: 80%;
          max-height: 70%;
          top: 50%;
          right: 50%;
          background-color: rgba(255, 255, 255, 0.5);
          padding: 20px;
          border-radius: 0 0 10px 0; /* Adjust border-radius as needed */
          box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
          text-align: left;
      }
      #closeButton {
          position: absolute;
          top: 7px;
          right: 7px;
          background-color: transparent;
          border: none;
          font-size: 20px;
          cursor: pointer;
          outline: none;
      }

    </style>

    <!-- Custom styles for this template -->
  </head>
  <body>
    <div class="container d-flex w-100 h-100 p-3 mx-auto flex-column">
        <header class="mb-auto">
            <div>
              <nav class="navbar navbar-expand-md navbar-light bg-light">
                <div class="container">
                    <button class="navbar-toggler ms-auto" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                        aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    <div class="collapse navbar-collapse" id="navbarNav">
                        <ul class="navbar-nav">
                            <li class="nav-item">
                                <a class="nav-link" href="/">Trang Chủ</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/about">Tổng Quan</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/qna">Q&A</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/contact">Liên Hệ</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="#">Trang trường</a>
                            </li>
                        </ul>
                    </div>
                </div>
              </nav>
            </div>
          </header>
    </div>
        <div class="container">
          <button id="startButton" onclick="showQuestion()"><strong>Start</strong></button>
          <div id="questionContainer" class="hidden">
              <div id="questionBox">
                  <label id="questionLabel" for="answer"></label>
              </div>
              <input type="text" id="answer" placeholder="Câu trả lời của bạn..."/>
              <div id="buttonsContainer">
                  <button id="prevButton" onclick="prevQuestion()">
                    <ion-icon name="caret-back-sharp"></ion-icon>
                  </button>
                  <button id="nextButton" onclick="nextQuestion()">
                    <ion-icon name="caret-forward-sharp"></ion-icon>
                  </button>
                  

                  
                  <button id="submitButton" onclick="submitQuestions()">Submit <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span></button>
              </div>
          </div>
        </div>
  
        <div id="answerContainer" class="hidden">
          <button id="closeButton" onclick="closeAnswerContainer()">✖</button>
          <h3>Server's Answer:</h3>
          <p id="serverAnswer"></p>
        </div>
      

    </div>
      <script>
        var questions = [
            { id: "question0", text: "0. Email của bạn là gì?" },
            { id: "question1", text: "1. Vui lòng giới thiệu về bản thân: Tên và lớp của bạn" },
            { id: "question2", text: "2. Bạn thích làm gì trong thời gian rảnh rỗi? (Ví dụ: đọc sách, chơi thể thao, nghệ thuật, lập trình, v.v.)" },
            { id: "question3", text: "3. Bạn có xu hướng thích làm việc với dữ liệu, con số hay ý kiến cá nhân hơn là làm việc với con người?" },
            { id: "question4", text: "4. Bạn cảm thấy thỏa mãn nhất khi hoàn thành công việc nào? (Ví dụ: giúp đỡ người khác, tạo ra sản phẩm sáng tạo, phân tích dữ liệu, v.v.)" },
            { id: "question5", text: "5. Những kỹ năng cụ thể nào mà bạn cảm thấy tự tin nhất (kỹ năng giao tiếp, làm việc nhóm, tư duy phản biện, quản lí thời gian, kỹ năng giải quyết vấn đề, quản lí stress v.v)" },
            { id: "question6", text: "6. Bạn nghĩ rằng đặc điểm nào của bản thân (như tính cách, kỹ năng, hoặc giới tính) có thể ảnh hưởng đến lựa chọn nghề nghiệp của bạn?" },
            { id: "question7", text: "7. Khi phải giải quyết vấn đề, bạn thường tiếp cận theo hướng nào?(Nghiên cứu và hiểu rõ vấn đề, tìm kiếm sự hỗ trợ, áp dụng phương pháp khoa học, thay đổi góc nhìn, kiên nhẫn quan sát v.v)" },
            { id: "question8", text: "8. Tình hình tài chính gia đình có ảnh hưởng đến lựa chọn nghề nghiệp của bạn không?" },
            { id: "question9", text: "9. Nếu bạn có cơ hội lựa chọn thêm nghề nghiệp, bạn muốn thử sức  trong lĩnh vực nào" },
            { id: "question10", text: "10. Bạn có bất kỳ câu hỏi hoặc thông tin nào bạn muốn chia sẻ về việc định hướng nghề nghiệp của bạn không?" },

            // Add more questions as needed
        ];

      
        var currentQuestionIndex = 0;
        var answers = [];
      
        function showQuestion() {
            document.getElementById('startButton').style.display = 'none';
            document.getElementById('questionContainer').style.display = 'block';
            displayCurrentQuestion();
        }
      
        document.getElementById('answer').addEventListener('click', function() {
    // Remove the 'invalid-answer' class when the input is clicked
            this.classList.remove('invalid-answer');
        });

        function nextQuestion() {
        var currentAnswer = document.getElementById('answer').value;

        // Check if the current question is answered
        if (!currentAnswer) {
            // Add a class to highlight the input box with a red border
            document.getElementById('answer').classList.add('invalid-answer');
            return; // Stop progressing to the next question
        } else {
            // Remove the class if the answer is provided
            document.getElementById('answer').classList.remove('invalid-answer');
        }

        // Additional validation for the first question (assuming it's an email)
        if (currentQuestionIndex === 0) {
            var emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

            if (!emailRegex.test(currentAnswer)) {
                // Add a class to highlight the input box with a red border
                document.getElementById('answer').classList.add('invalid-answer');
                return; // Stop progressing to the next question
            } else {
                // Remove the class if the answer is a valid email
                document.getElementById('answer').classList.remove('invalid-answer');
            }
        }

        // Store the answer in the answers array with the corresponding question index
        answers[currentQuestionIndex] = currentAnswer;

        currentQuestionIndex++;

        if (currentQuestionIndex < questions.length) {
            displayCurrentQuestion();

            if (currentQuestionIndex === questions.length - 1) {
                document.getElementById('nextButton').style.display = 'none';
                document.getElementById('submitButton').style.display = 'inline-block';
            }
        } else {
            document.getElementById('questionContainer').style.display = 'none';
            console.log("Answers:", answers);
            // Hiển thị câu trả lời cho người dùng (có thể thêm phần này)
        }
    }
     
        function prevQuestion() {
            currentQuestionIndex--;
            displayCurrentQuestion();
            if (currentQuestionIndex !== questions.length - 1) {
                document.getElementById('nextButton').style.display = 'inline-block';
                document.getElementById('submitButton').style.display = 'none';
            }
        }
      
        function displayCurrentQuestion() {
          var questionLabel = document.getElementById('questionLabel');
          questionLabel.innerText = questions[currentQuestionIndex].text;

          var currentAnswer = answers[questions[currentQuestionIndex].id] || '';
          document.getElementById('answer').value = currentAnswer;

          document.getElementById('submitButton').style.display = 'none';

          // Show or hide the "Back" button based on the current question index
          if (currentQuestionIndex === 0) {
              document.getElementById('prevButton').style.display = 'none';
          } else {
              document.getElementById('prevButton').style.display = 'inline-block';
          }

          // Show or hide the "Next" and "Submit" buttons based on the current question index
          if (currentQuestionIndex === questions.length - 1) {
              document.getElementById('nextButton').style.display = 'none';
              document.getElementById('submitButton').style.display = 'inline-block';
          } else {
              document.getElementById('nextButton').style.display = 'inline-block';
          }
        }
      
        function submitQuestions() {
          var submitButton = document.getElementById('submitButton');
          var spinner = submitButton.querySelector('.spinner-border');
          

          // Thêm class "loading" để thay đổi giao diện nút và ngăn chặn nhấp nút khi đang xử lý
          submitButton.classList.add('loading');
          spinner.classList.add('spinner-border');
          //
          answers[currentQuestionIndex] = document.getElementById('answer').value;

          fetch('/qna', {
              method: 'POST',
              headers: {
                  'Content-Type': 'application/json',
              },
              body: JSON.stringify({ answers: answers }),
          })
          .then(response => response.json())
          .then(data => {
              if (data && data.answer) {
                  console.log('Server Response:', data.answer);

                  // Hiển thị câu trả lời từ server
                  document.getElementById('serverAnswer').innerText = data.answer;
                  document.getElementById('answerContainer').style.display = 'block';
                  document.getElementById('questionContainer').style.display = 'none'; // Hide the question container
                  submitButton.classList.remove('loading');
                  spinner.classList.remove('spinner-border');
              } else {
                  console.error('Invalid server response:', data);
                  submitButton.classList.remove('loading');
                  spinner.classList.remove('spinner-border');
              }
          })
          .catch((error) => {
              console.error('Error:', error);
              window.location.href = '/qna';
          });
        }
        function closeAnswerContainer() {
            document.getElementById('answerContainer').style.display = 'none';
            document.getElementById('questionContainer').style.display = 'block';
            answers = [];
            // Redirect to the "contact" page (replace '/contact' with the actual URL)
            window.location.href = '/contact';
        }
        

      </script>
      
        
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/js/bootstrap.bundle.min.js" integrity="sha384-pprn3073KE6tl6bjs2QrFaJGz5/SUsLqktiwsUTF55Jfv3qYSDhgCecCxMW52nD2" crossorigin="anonymous"></script>
      <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
      <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
  </body>
</html>
